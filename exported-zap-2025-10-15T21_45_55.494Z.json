{"metadata":{"version":2},"zaps":[{"id":1,"title":"AR Triage","nodes":{"1":{"id":1,"paused":false,"type_of":"read","params":{"key":""},"meta":{"$editor":{"has_automatic_issues":false},"timezone":"America/Toronto","parammap":{}},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":null,"root_id":null,"action":"hook_v2","selected_api":"WebHookCLIAPI@1.0.29","title":"AR Triage","authentication_id":null},"2":{"id":2,"paused":true,"type_of":"write","params":{"delay_for_value":"1","delay_for_unit":"minutes"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{},"stepTitle":"Delay For 1 min"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":1,"root_id":1,"action":"delay_for","selected_api":"DelayCLIAPI@1.0.4","title":null,"authentication_id":null},"3":{"id":3,"paused":true,"type_of":"write","params":{"provider_id":"google","authentication_id":"0","model_id":"google/gemini-2.0-flash","isOutputArray":"false","instructions":"You are an **expert support triage assistant** for the Accounts Receivable (AR) team. Your task is to assign each incoming email to one of the following groups, based on the **email subject and email body**.\n\n**Always choose the most appropriate group.** Only return the three-part format exactly as defined below. Do not return any other text, prefixes, or formatting.\n\n### Strict Output Format\n\n1.  The **Group Name** (exactly as listed in the \"Available Groups\" section).\n2.  The **Reasoning** for your decision (1-2 sentences).\n3.  A **Summary** of the ticket request (maximum of 2 sentences).\n\n---\n\n### Available Groups:\n- AR Phone\n- Purchase Orders (Full-Serve)\n- Purchase Orders (Self-Serve)\n- Credit Card Requests\n- Dunning (Net Suite)\n- Dunning (Stripe)\n- Wire Refunds\n- Remittance\n- Tax Exemption\n- Vendor Registration, W8\n- Supplier Portals\n\n---\n\n### Classification Rules\n\n#### 1. PRIMARY OVERRIDE RULE\n1. PRIMARY OVERRIDE RULE: AR PHONE IS LITERAL AND ABSOLUTE\nAR Phone – This rule MUST be checked FIRST. This group is only selected if the Ticket Subject contains the EXACT, LITERAL PHRASE: \"Missed Call from Caller\" AND a visible phone number. No inference or approximation is allowed. If the subject does not contain this exact text, this rule is skipped, and classification continues to the Purchase Orders section. Check it out here: {{1__ticket_subject}}\n\n#### 2. PURCHASE ORDERS (PO)\nThe requester is explicitly submitting or checking the status of a PO, asking about payment methods, or mentioning \"activate\" or \"reactivate.\" The primary distinction is the type of license or cost:\n\n* **Purchase Orders (Full-Serve)** – For high-value/full-serve POs. Look for license keywords like **\"Named User,\"** **\"Unlimited,\"** **\"Site-Wide,\"** or **\"Right to Deploy.\"** These often reference quotes or involve a total dollar value of $4,308.00 or greater.\n* **Purchase Orders (Self-Serve)** – For low-value/self-serve POs. Look for license keywords like **\"Individual\"** or **\"Lab.\"** These often reference specific pricing such as $420.00, $948.00, or $1,188.00.\n\n#### 3. DUNNING (Overdue Invoices)\nThis group is for communications related to **overdue invoices**, payment resolution, discrepancies, or outstanding balances. If an invoice number is present, use its format to decide:\n\n* **Dunning (Net Suite)** – Applies to invoices generated through NetSuite. Look for invoice number formats like **INVXXXX** (where XXXX is a series of numbers). Also used for asking US to SUBMIT or RE-SUBMIT a PO, or INQUIRING WHY SOMETHING WAS SENT WITHOUT A PO (THIS IS NOT PO SUBMISSION).\n* **Dunning (Stripe)** – Applies to invoices linked to Stripe. Look for invoice number formats like **XXXXXXXX-YYYY** (alphanumeric and numeric). Often, but not always, the subject will contain the format: “RE: Reminder: Your invoice from Science Suite Inc. DBA BioRender #XXXXXXXX-XXXX is XX days past due.” Also used for asking US to SUBMIT or RE-SUBMIT a PO, or INQUIRING WHY SOMETHING WAS SENT WITHOUT A PO (THIS IS NOT PO SUBMISSION).\n\n#### 4. OTHER FINANCIAL REQUESTS\n* **Credit Card Requests** – The sender wants to pay by credit card or asks for a way to use a credit card to purchase.\n* **Wire Refunds** – Explicitly requesting a **REFUND** via bank wire, ACH, or physical check. (This is **NOT** a request to *pay* through wire.)\n* **Remittance** – Proof of payment, ACH confirmation, bank transfer receipt, or notice of payment.\n* **Tax Exemption** – Asking about tax exemption, submitting a certificate, or requesting a VAT refund.\n\n#### 5. ADMINISTRATIVE/VENDOR FORMS\n* **Vendor Registration, W8** – Requesting completion of a W9, W8, W8-BEN, vendor setup paperwork or **ANY forms** for vendor setup.\n* **Supplier Portals** – The sender is asking to register BioRender in a procurement/supplier portal.","inputFields":{"Ticket Subject":"{{1__ticket_subject}}","Email Body":"{{1__comments_formatted}}"},"inputFieldConfig_Ticket Subject_isImageUrl":false,"inputFieldConfig_Email Body_isImageUrl":false,"options_Assigned Group":["Purchase Orders","Credit Card Requests","Dunning","Wire Refunds","Remittance","Tax Exemption","Vendor Registration, W8","Supplier Portals","AR Phone"],"outputSchema":{"Group Name":"The name of the group to which the email is assigned based on the content of the email subject and body.","Reasoning":"A brief explanation of why the email was assigned to the chosen group, based on the content of the email subject and body.","Summary":"A concise summary of the ticket request, capturing the main points in a maximum of two sentences."},"required_Group Name":true,"type_Group Name":"category_single","options_Group Name":["AR Phone","Purchase Orders (Full-Serve)","Purchase Orders (Self-Serve)","Credit Card Requests","Dunning (Net Suite)","Dunning (Stripe)","Wire Refunds","Remittance","Tax Exemption","Vendor Registration, W8","Supplier Portals"],"required_Reasoning":true,"type_Reasoning":"text","required_Summary":true,"type_Summary":"text"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{"provider_id":"Google","model_id":"Gemini 2.0 Flash","authentication_id":"Included in Plan"},"stepTitle":"Analyze and Return Data"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":2,"root_id":1,"action":"get_completion","selected_api":"AICLIAPI@3.3.1","title":null,"authentication_id":null},"4":{"id":4,"paused":true,"type_of":"write","params":{"unflatten":false,"return_raw_response":"no","method":"GET","url":"https://biorendersupport.zendesk.com/api/v2/search.json","headers":{"Content-Type":"application/json"},"auth":"jocelyne@biorender.com/token|RrdKrurZWjeMSEXYUKCkUILTcdbkJkhLnjTQmsnM","data":"{\n  \"query\": \"status<solved assignee:lidia.zdeb@biorender.com\"\n}"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{},"stepTitle":"Find Open Tickets Lidia"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":3,"root_id":1,"action":"custom","selected_api":"WebHookCLIAPI@1.0.29","title":"Find Open Tickets Lidia","authentication_id":null},"5":{"id":5,"paused":true,"type_of":"write","params":{"unflatten":false,"return_raw_response":"no","method":"GET","url":"https://biorendersupport.zendesk.com/api/v2/search.json","headers":{"Content-Type":"application/json"},"auth":"jocelyne@biorender.com/token|RrdKrurZWjeMSEXYUKCkUILTcdbkJkhLnjTQmsnM","data":"{\n  \"query\": \"status<solved assignee:chruthy.k@biorender.com\"\n}"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{},"stepTitle":"Find Open Tickets Chruthy"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":4,"root_id":1,"action":"custom","selected_api":"WebHookCLIAPI@1.0.29","title":"Find Open Tickets Chruthy","authentication_id":null},"6":{"id":6,"paused":true,"type_of":"write","params":{"unflatten":false,"return_raw_response":"no","method":"GET","url":"https://biorendersupport.zendesk.com/api/v2/search.json","headers":{"Content-Type":"application/json"},"auth":"jocelyne@biorender.com/token|RrdKrurZWjeMSEXYUKCkUILTcdbkJkhLnjTQmsnM","data":"{\n  \"query\": \"status<solved assignee:andres.pino@biorender.com\"\n}"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{},"stepTitle":"Find Open Tickets Andres"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":5,"root_id":1,"action":"custom","selected_api":"WebHookCLIAPI@1.0.29","title":"Find Open Tickets Andres","authentication_id":null},"7":{"id":7,"paused":true,"type_of":"write","params":{"unflatten":false,"return_raw_response":"no","method":"GET","url":"https://biorendersupport.zendesk.com/api/v2/search.json","headers":{"Content-Type":"application/json"},"auth":"jocelyne@biorender.com/token|RrdKrurZWjeMSEXYUKCkUILTcdbkJkhLnjTQmsnM","data":"{\n  \"query\": \"status<solved assignee:braden@biorender.com\"\n}"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{},"stepTitle":"Find Open Tickets Braden"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":6,"root_id":1,"action":"custom","selected_api":"WebHookCLIAPI@1.0.29","title":"Find Open Tickets Braden","authentication_id":null},"8":{"id":8,"paused":true,"type_of":"write","params":{"unflatten":false,"return_raw_response":"no","method":"GET","url":"https://biorendersupport.zendesk.com/api/v2/search.json","headers":{"Content-Type":"application/json"},"auth":"jocelyne@biorender.com/token|RrdKrurZWjeMSEXYUKCkUILTcdbkJkhLnjTQmsnM","data":"{\n  \"query\": \"status<solved assignee:jordan.wilton@biorender.com\"\n}"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{},"stepTitle":"Find Open Tickets Jordan"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":7,"root_id":1,"action":"custom","selected_api":"WebHookCLIAPI@1.0.37","title":"Find Open Tickets Jordan","authentication_id":null},"9":{"id":9,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":"False","_zap_search_multiple_results":"group","table_id":"01JXGCBREC6CZAQK9K7JMWZBFP","filter_count":"1","field_data_key":"data__f5","operator":"exact","lookup_value":"AR"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{"table_id":"[Table] Zendesk Agent Availability","field_data_key":"Team"},"stepTitle":"Find AR Availability"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":8,"root_id":1,"action":"find_record","selected_api":"TableCLIAPI@1.19.0","title":"Find AR Availability","authentication_id":null},"10":{"id":10,"paused":true,"type_of":"write","params":{},"meta":{"$editor":{"has_automatic_issues":false}},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":9,"root_id":1,"action":"branch","selected_api":"BranchingAPI","title":null,"authentication_id":null},"11":{"id":11,"paused":true,"type_of":"filter","params":{"color":"Heroine Blue","emoji":"A","path_eval_index":0,"filter_criteria":[{"id":2314687972692811,"group":8981277590119783,"key":"3__Group Name","value":"Purchase Orders","match":"icontains","action":"continue"}]},"meta":{"$editor":{"has_automatic_issues":false},"stepTitle":"PO"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":10,"root_id":1,"action":"filter","selected_api":"BranchingAPI","title":"Path A","authentication_id":null},"12":{"id":12,"paused":true,"type_of":"filter","params":{"color":"Peru","emoji":"B","path_eval_index":1,"filter_criteria":[{"id":5916096104419315,"group":3761551042403788,"key":"3__Group Name","value":"Credit Card Requests","match":"iexact","action":"continue"}]},"meta":{"$editor":{"has_automatic_issues":false},"stepTitle":"Credit Card Requests"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":10,"root_id":1,"action":"filter","selected_api":"BranchingAPI","title":"Path B","authentication_id":null},"13":{"id":13,"paused":true,"type_of":"filter","params":{"color":"Yellow Green","emoji":"C","path_eval_index":2,"filter_criteria":[{"id":1018434511837820,"group":7966444609965797,"key":"3__Group Name","value":"Dunning","match":"icontains","action":"continue"}]},"meta":{"$editor":{"has_automatic_issues":false},"stepTitle":"Dunning"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":10,"root_id":1,"action":"filter","selected_api":"BranchingAPI","title":"Path C","authentication_id":null},"14":{"id":14,"paused":true,"type_of":"filter","params":{"color":"Dark Olive Green","emoji":"E","path_eval_index":3,"filter_criteria":[{"id":3951764448091850,"group":5641990905836027,"key":"3__Group Name","value":"Wire Refunds","match":"iexact","action":"continue"}]},"meta":{"$editor":{"has_automatic_issues":false},"stepTitle":"Wire Refunds"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":10,"root_id":1,"action":"filter","selected_api":"BranchingAPI","title":"Path E","authentication_id":null},"15":{"id":15,"paused":true,"type_of":"filter","params":{"color":"Light Slate Gray","emoji":"F","path_eval_index":4,"filter_criteria":[{"id":1896655056219480,"group":2524754213270482,"key":"3__Group Name","value":"Remittance","match":"iexact","action":"continue"}]},"meta":{"$editor":{"has_automatic_issues":false},"stepTitle":"Remittance"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":10,"root_id":1,"action":"filter","selected_api":"BranchingAPI","title":"Path F","authentication_id":null},"16":{"id":16,"paused":true,"type_of":"filter","params":{"color":"Dark Salmon","emoji":"G","path_eval_index":5,"filter_criteria":[{"id":8460456099840372,"group":6007507453467170,"key":"3__Group Name","value":"Tax Exemption","match":"iexact","action":"continue"}]},"meta":{"$editor":{"has_automatic_issues":false},"stepTitle":"Tax Exemption"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":10,"root_id":1,"action":"filter","selected_api":"BranchingAPI","title":"Path G","authentication_id":null},"17":{"id":17,"paused":true,"type_of":"filter","params":{"color":"Dark Slate Gray","emoji":"H","path_eval_index":6,"filter_criteria":[{"id":2078334481599615,"group":3205294354245377,"key":"3__Group Name","value":"Vendor Registration, W8","match":"iexact","action":"continue"}]},"meta":{"$editor":{"has_automatic_issues":false},"stepTitle":"Vendor Registration"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":10,"root_id":1,"action":"filter","selected_api":"BranchingAPI","title":"Path H","authentication_id":null},"18":{"id":18,"paused":true,"type_of":"filter","params":{"color":"Dark Sea Green","emoji":"I","path_eval_index":7,"filter_criteria":[{"id":6048100214853380,"group":1050827944616469,"key":"3__Group Name","value":"Supplier Portals","match":"iexact","action":"continue"}]},"meta":{"$editor":{"has_automatic_issues":false},"stepTitle":"Supplier Portals"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":10,"root_id":1,"action":"filter","selected_api":"BranchingAPI","title":"Path I","authentication_id":null},"19":{"id":19,"paused":true,"type_of":"filter","params":{"color":"Dark Sea Green","emoji":"I","path_eval_index":8,"filter_criteria":[{"id":876274163753863,"group":462335121365097,"key":"3__Group Name","value":"AR Phone","match":"iexact","action":"continue"}]},"meta":{"$editor":{"has_automatic_issues":false},"stepTitle":"AR Phone"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":10,"root_id":1,"action":"filter","selected_api":"BranchingAPI","title":"Path I","authentication_id":null},"20":{"id":20,"paused":true,"type_of":"write","params":{"input":{"lidia_open":"{{4__count}}","chruthy_open":"{{5__count}}","braden_open":"{{7__count}}","andres_open":"{{6__count}}","names":"{{9__results[]old__data__f1}}","available":"{{9__results[]old__data__f3}}","jordan_open":"{{8__count}}"},"code":"// Parse inputs\nconst names = inputData.names.split(\",\").map(n => n.trim());\nconst available = inputData.available.split(\",\").map(a => a.trim().toLowerCase() === \"true\");\n\n// Map agent open ticket counts from individually named inputs\nconst openCounts = {\n  \"Lidia\": parseInt(inputData.lidia_open, 10) || 0,\n  \"Chruthy\": parseInt(inputData.chruthy_open, 10) || 0,\n  \"Braden\": parseInt(inputData.braden_open, 10) || 0,\n  \"Andres\": parseInt(inputData.andres_open, 10) || 0\n};\n\n// Get current hour in ET\nconst now = new Date();\nconst etHour = now.toLocaleString(\"en-US\", {\n  timeZone: \"America/Toronto\",\n  hour: \"numeric\",\n  hour12: false\n});\nconst currentHour = parseInt(etHour, 10);\n\n// Define working hours for each agent\nconst workingHours = {\n  \"Lidia\": currentHour >= 4 && currentHour < 20,   // 4am-8pm ET\n  \"Chruthy\": true,  // Toronto-based, no restrictions\n  \"Braden\": true,   // Toronto-based, no restrictions\n  \"Andres\": true    // Toronto-based, no restrictions\n};\n\n// Build agent objects - exclude Jordan for now\nconst agents = names\n  .filter(name => name !== \"Jordan\")  // Temporarily exclude Jordan\n  .map((name, index) => ({\n    name,\n    available: available[names.indexOf(name)], // Get availability from original names index\n    openTickets: openCounts[name] ?? 0,\n    inWorkingHours: workingHours[name] ?? true\n  }));\n\n// Filter for eligible agents (available AND within working hours)\nconst eligible = agents.filter(agent => agent.available && agent.inWorkingHours);\n\n// Assign logic\nlet assignee = \"NO_ONE_AVAILABLE\";\nlet tied = [];\nlet reason = \"\";\n\nif (eligible.length > 0) {\n  const minOpen = Math.min(...eligible.map(a => a.openTickets));\n  tied = eligible.filter(a => a.openTickets === minOpen);\n\n  if (tied.length === 1) {\n    assignee = tied[0].name;\n    reason = `Assigned to ${assignee} with lowest load (${minOpen} open tickets)`;\n  } else {\n    const randomIndex = Math.floor(Math.random() * tied.length);\n    assignee = tied[randomIndex].name;\n    reason = `Randomly assigned among ${tied.length} agents tied at ${minOpen} open tickets: ${tied.map(a => a.name).join(\", \")}`;\n  }\n} else {\n  reason = \"No agents available\";\n}\n\nreturn {\n  assignee,\n  eligibleAgents: eligible.map(a => `${a.name}: ${a.openTickets} open`),\n  tiedAtMin: tied.map(a => a.name),\n  reason,\n  currentHour: `${currentHour}:00 ET`\n};"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1750387221629","giveKey":"count","stepTitle":"Find Open Tickets Lidia","stepNumber":3,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221614","giveKey":"count","stepTitle":"Find Open Tickets Chruthy","stepNumber":4,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221624","giveKey":"count","stepTitle":"Find Open Tickets Braden","stepNumber":6,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221619","giveKey":"count","stepTitle":"Find Open Tickets Andres","stepNumber":5,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"304978955","giveKey":"results[]old__data__f1","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true},{"stepId":"304978955","giveKey":"results[]old__data__f3","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true}],"replaced_step_id":"304978971"},"parammap":{},"stepTitle":"Load-Based Assignment"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":19,"root_id":1,"action":"01929fad-d3dd-62c2-52ed-7868d5fcc691","selected_api":"CodeCLIAPI@1.0.1","title":"Load-Based Assignment","authentication_id":null},"21":{"id":21,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":"False","_zap_search_multiple_results":"first","query":"{{20__assignee}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"302745537","giveKey":"assignee","stepTitle":"Check Avail > Round Robin > Assign","stepNumber":43,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749600142366"},"parammap":{},"stepTitle":"Find Agent in Zendesk"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":20,"root_id":1,"action":"agent","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Find Agent in Zendesk","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"22":{"id":22,"paused":true,"type_of":"write","params":{"comment_public":false,"ticket":"{{1__ticket_id}}","group_id":"29379468871453","subject":"","comment":"","assignee_id":"{{21__id}}","priority":"urgent"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier (1.0.22)","stepNumber":1,"app":"WebHookCLIAPI@1.0.22","hadMappingAtCopyTime":true},{"stepId":"301819547","giveKey":"Ticket Summary","stepTitle":"Analyze and Return Data in AI by Zapier","stepNumber":2,"app":"AICLIAPI@3.1.12","hadMappingAtCopyTime":true},{"stepId":"301852840","giveKey":"id","stepTitle":"Find Agent in Zendesk","stepNumber":44,"app":"ZendeskV2CLIAPI@1.16.0","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749600142367"},"parammap":{"group_id":"AR Phone"},"stepTitle":"Assign to AR Phone "},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":21,"root_id":1,"action":"update_ticket_v2","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Assign to AR Phone ","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"23":{"id":23,"paused":true,"type_of":"write","params":{"spreadsheet":"1WqHi-_kLMQxv-R2ykH1abQznm7S2xO5jHmTVdD18uwo","worksheet":"0","COL$A":"{{1__created_at}}","COL$B":"=HYPERLINK(\"{{1__ticket_link}}\", \"{{1__ticket_id}}\") ","COL$C":"{{21__name}}","COL$D":"AR Phone","COL$E":"{{3__Assignment Reasoning}}","COL$F":"{{20__reason}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"created_at","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_link","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"assignee","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true},{"stepId":"301819547","giveKey":"Assignment Reasoning","stepTitle":"Analyze and Return Data","stepNumber":2,"app":"AICLIAPI@3.1.12","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"reason","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1750371736634"},"parammap":{"spreadsheet":"AR Triager: Ticket Assignment","worksheet":"Sheet1"},"stepTitle":"Copy: Log info"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":22,"root_id":1,"action":"add_row_top","selected_api":"GoogleSheetsV2CLIAPI@2.5.4","title":"Copy: Log info","authentication_id":"c63e3b38022ba546610b0146744a1870753d0668f7e661fe93b1712a517193b1"},"24":{"id":24,"paused":true,"type_of":"write","params":{"input":{"lidia_open":"{{4__count}}","chruthy_open":"{{5__count}}","braden_open":"{{7__count}}","andres_open":"{{6__count}}","names":"{{9__results[]old__data__f1}}","available":"{{9__results[]old__data__f3}}","jordan_open":"{{8__count}}"},"code":"// Parse inputs\nconst names = inputData.names.split(\",\").map(n => n.trim());\nconst available = inputData.available.split(\",\").map(a => a.trim().toLowerCase() === \"true\");\n\n// Map agent open ticket counts from individually named inputs\nconst openCounts = {\n  \"Lidia\": parseInt(inputData.lidia_open, 10) || 0,\n  \"Chruthy\": parseInt(inputData.chruthy_open, 10) || 0,\n  \"Braden\": parseInt(inputData.braden_open, 10) || 0,\n  \"Andres\": parseInt(inputData.andres_open, 10) || 0\n};\n\n// Get current hour in ET\nconst now = new Date();\nconst etHour = now.toLocaleString(\"en-US\", {\n  timeZone: \"America/Toronto\",\n  hour: \"numeric\",\n  hour12: false\n});\nconst currentHour = parseInt(etHour, 10);\n\n// Define working hours for each agent\nconst workingHours = {\n  \"Lidia\": currentHour >= 4 && currentHour < 20,   // 4am-8pm ET\n  \"Chruthy\": true,  // Toronto-based, no restrictions\n  \"Braden\": true,   // Toronto-based, no restrictions\n  \"Andres\": true    // Toronto-based, no restrictions\n};\n\n// Build agent objects - exclude Jordan for now\nconst agents = names\n  .filter(name => name !== \"Jordan\")  // Temporarily exclude Jordan\n  .map((name, index) => ({\n    name,\n    available: available[names.indexOf(name)], // Get availability from original names index\n    openTickets: openCounts[name] ?? 0,\n    inWorkingHours: workingHours[name] ?? true\n  }));\n\n// Filter for eligible agents (available AND within working hours)\nconst eligible = agents.filter(agent => agent.available && agent.inWorkingHours);\n\n// Assign logic\nlet assignee = \"NO_ONE_AVAILABLE\";\nlet tied = [];\nlet reason = \"\";\n\nif (eligible.length > 0) {\n  const minOpen = Math.min(...eligible.map(a => a.openTickets));\n  tied = eligible.filter(a => a.openTickets === minOpen);\n\n  if (tied.length === 1) {\n    assignee = tied[0].name;\n    reason = `Assigned to ${assignee} with lowest load (${minOpen} open tickets)`;\n  } else {\n    const randomIndex = Math.floor(Math.random() * tied.length);\n    assignee = tied[randomIndex].name;\n    reason = `Randomly assigned among ${tied.length} agents tied at ${minOpen} open tickets: ${tied.map(a => a.name).join(\", \")}`;\n  }\n} else {\n  reason = \"No agents available\";\n}\n\nreturn {\n  assignee,\n  eligibleAgents: eligible.map(a => `${a.name}: ${a.openTickets} open`),\n  tiedAtMin: tied.map(a => a.name),\n  reason,\n  currentHour: `${currentHour}:00 ET`\n};"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1750387221629","giveKey":"count","stepTitle":"Find Open Tickets Lidia","stepNumber":3,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221614","giveKey":"count","stepTitle":"Find Open Tickets Chruthy","stepNumber":4,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221624","giveKey":"count","stepTitle":"Find Open Tickets Braden","stepNumber":6,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221619","giveKey":"count","stepTitle":"Find Open Tickets Andres","stepNumber":5,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"304978955","giveKey":"results[]old__data__f1","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true},{"stepId":"304978955","giveKey":"results[]old__data__f3","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true}],"replaced_step_id":"304978969"},"parammap":{},"stepTitle":"Load-Based Assignment"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":18,"root_id":1,"action":"01929fad-d3dd-62c2-52ed-7868d5fcc691","selected_api":"CodeCLIAPI@1.0.1","title":"Load-Based Assignment","authentication_id":null},"25":{"id":25,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":"False","_zap_search_multiple_results":"first","query":"{{24__assignee}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1749047354640","giveKey":"assignee","stepTitle":"Round Robin","stepNumber":17,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749047354682"},"parammap":{},"stepTitle":"Find Agent in Zendesk"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":24,"root_id":1,"action":"agent","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Find Agent in Zendesk","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"26":{"id":26,"paused":true,"type_of":"write","params":{"comment_public":false,"ticket":"{{1__ticket_id}}","group_id":"19023707936797","subject":"","comment":"","assignee_id":"{{25__id}}","priority":"high"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.22","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749047354591"},"parammap":{"group_id":"Supplier Portals"},"stepTitle":"Assign to Supplier Portals "},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":25,"root_id":1,"action":"update_ticket_v2","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Assign to Purchase Orders ","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"27":{"id":27,"paused":true,"type_of":"write","params":{"spreadsheet":"1WqHi-_kLMQxv-R2ykH1abQznm7S2xO5jHmTVdD18uwo","worksheet":"0","COL$A":"{{1__created_at}}","COL$B":"=HYPERLINK(\"{{1__ticket_link}}\", \"{{1__ticket_id}}\") ","COL$C":"{{24__assignee}}","COL$D":"Supplier Portals","COL$E":"{{3__Assignment Reasoning}}","COL$F":"{{24__reason}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"created_at","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_link","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"assignee","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true},{"stepId":"301819547","giveKey":"Assignment Reasoning","stepTitle":"Analyze and Return Data","stepNumber":2,"app":"AICLIAPI@3.1.12","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"reason","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1750371736632"},"parammap":{"spreadsheet":"AR Triager: Ticket Assignment","worksheet":"Sheet1"},"stepTitle":"Log info"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":26,"root_id":1,"action":"add_row_top","selected_api":"GoogleSheetsV2CLIAPI@2.5.4","title":"Log info","authentication_id":"c63e3b38022ba546610b0146744a1870753d0668f7e661fe93b1712a517193b1"},"28":{"id":28,"paused":true,"type_of":"write","params":{"input":{"lidia_open":"{{4__count}}","chruthy_open":"{{5__count}}","braden_open":"{{7__count}}","andres_open":"{{6__count}}","names":"{{9__results[]old__data__f1}}","available":"{{9__results[]old__data__f3}}","jordan_open":"{{8__count}}"},"code":"// Parse inputs\nconst names = inputData.names.split(\",\").map(n => n.trim());\nconst available = inputData.available.split(\",\").map(a => a.trim().toLowerCase() === \"true\");\n\n// Map agent open ticket counts from individually named inputs\nconst openCounts = {\n  \"Lidia\": parseInt(inputData.lidia_open, 10) || 0,\n  \"Chruthy\": parseInt(inputData.chruthy_open, 10) || 0,\n  \"Braden\": parseInt(inputData.braden_open, 10) || 0,\n  \"Andres\": parseInt(inputData.andres_open, 10) || 0\n};\n\n// Get current hour in ET\nconst now = new Date();\nconst etHour = now.toLocaleString(\"en-US\", {\n  timeZone: \"America/Toronto\",\n  hour: \"numeric\",\n  hour12: false\n});\nconst currentHour = parseInt(etHour, 10);\n\n// Define working hours for each agent\nconst workingHours = {\n  \"Lidia\": currentHour >= 4 && currentHour < 20,   // 4am-8pm ET\n  \"Chruthy\": true,  // Toronto-based, no restrictions\n  \"Braden\": true,   // Toronto-based, no restrictions\n  \"Andres\": true    // Toronto-based, no restrictions\n};\n\n// Build agent objects - exclude Jordan for now\nconst agents = names\n  .filter(name => name !== \"Jordan\")  // Temporarily exclude Jordan\n  .map((name, index) => ({\n    name,\n    available: available[names.indexOf(name)], // Get availability from original names index\n    openTickets: openCounts[name] ?? 0,\n    inWorkingHours: workingHours[name] ?? true\n  }));\n\n// Filter for eligible agents (available AND within working hours)\nconst eligible = agents.filter(agent => agent.available && agent.inWorkingHours);\n\n// Assign logic\nlet assignee = \"NO_ONE_AVAILABLE\";\nlet tied = [];\nlet reason = \"\";\n\nif (eligible.length > 0) {\n  const minOpen = Math.min(...eligible.map(a => a.openTickets));\n  tied = eligible.filter(a => a.openTickets === minOpen);\n\n  if (tied.length === 1) {\n    assignee = tied[0].name;\n    reason = `Assigned to ${assignee} with lowest load (${minOpen} open tickets)`;\n  } else {\n    const randomIndex = Math.floor(Math.random() * tied.length);\n    assignee = tied[randomIndex].name;\n    reason = `Randomly assigned among ${tied.length} agents tied at ${minOpen} open tickets: ${tied.map(a => a.name).join(\", \")}`;\n  }\n} else {\n  reason = \"No agents available\";\n}\n\nreturn {\n  assignee,\n  eligibleAgents: eligible.map(a => `${a.name}: ${a.openTickets} open`),\n  tiedAtMin: tied.map(a => a.name),\n  reason,\n  currentHour: `${currentHour}:00 ET`\n};"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1750387221629","giveKey":"count","stepTitle":"Find Open Tickets Lidia","stepNumber":3,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221614","giveKey":"count","stepTitle":"Find Open Tickets Chruthy","stepNumber":4,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221624","giveKey":"count","stepTitle":"Find Open Tickets Braden","stepNumber":6,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221619","giveKey":"count","stepTitle":"Find Open Tickets Andres","stepNumber":5,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"304978955","giveKey":"results[]old__data__f1","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true},{"stepId":"304978955","giveKey":"results[]old__data__f3","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true}],"replaced_step_id":"304978967"},"parammap":{},"stepTitle":"Load-Based Assignment"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":17,"root_id":1,"action":"01929fad-d3dd-62c2-52ed-7868d5fcc691","selected_api":"CodeCLIAPI@1.0.1","title":"Load-Based Assignment","authentication_id":null},"29":{"id":29,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":"False","_zap_search_multiple_results":"first","query":"{{28__assignee}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1749047354640","giveKey":"assignee","stepTitle":"Round Robin","stepNumber":17,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749047354681"},"parammap":{},"stepTitle":"Find Agent in Zendesk"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":28,"root_id":1,"action":"agent","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Find Agent in Zendesk","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"30":{"id":30,"paused":true,"type_of":"write","params":{"comment_public":false,"ticket":"{{1__ticket_id}}","group_id":"19022054480797","subject":"","comment":"","assignee_id":"{{29__id}}","priority":"high"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.22","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749047354586"},"parammap":{"group_id":"Vendor Registration, W8"},"stepTitle":"Assign to Vendor Registration "},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":29,"root_id":1,"action":"update_ticket_v2","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Assign to Purchase Orders ","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"31":{"id":31,"paused":true,"type_of":"write","params":{"spreadsheet":"1WqHi-_kLMQxv-R2ykH1abQznm7S2xO5jHmTVdD18uwo","worksheet":"0","COL$A":"{{1__created_at}}","COL$B":"=HYPERLINK(\"{{1__ticket_link}}\", \"{{1__ticket_id}}\") ","COL$C":"{{28__assignee}}","COL$D":"Vendor Registration","COL$E":"{{3__Assignment Reasoning}}","COL$F":"{{28__reason}}"},"meta":{"$editor":{"has_automatic_issues":true,"missing_field_mapping":[{"stepId":"301819546","giveKey":"created_at","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_link","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"assignee","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true},{"stepId":"301819547","giveKey":"Assignment Reasoning","stepTitle":"Analyze and Return Data","stepNumber":2,"app":"AICLIAPI@3.1.12","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"reason","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1750371736630"},"parammap":{"spreadsheet":"AR Triager: Ticket Assignment","worksheet":"Sheet1"},"stepTitle":"Log info"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":30,"root_id":1,"action":"add_row_top","selected_api":"GoogleSheetsV2CLIAPI@2.5.4","title":"Log info","authentication_id":"c63e3b38022ba546610b0146744a1870753d0668f7e661fe93b1712a517193b1"},"32":{"id":32,"paused":true,"type_of":"write","params":{"input":{"lidia_open":"{{4__count}}","chruthy_open":"{{5__count}}","braden_open":"{{7__count}}","names":"{{9__results[]old__data__f1}}","available":"{{9__results[]old__data__f3}}","jordan_open":"{{8__count}}"},"code":"// Parse inputs\nconst names = inputData.names.split(\",\").map(n => n.trim());\nconst available = inputData.available.split(\",\").map(a => a.trim().toLowerCase() === \"true\");\n\n// Map agent open ticket counts from individually named inputs\nconst openCounts = {\n  \"Lidia\": parseInt(inputData.lidia_open, 10) || 0,\n  \"Chruthy\": parseInt(inputData.chruthy_open, 10) || 0,\n  \"Braden\": parseInt(inputData.braden_open, 10) || 0,\n  \"Andres\": parseInt(inputData.andres_open, 10) || 0\n};\n\n// Get current hour in ET\nconst now = new Date();\nconst etHour = now.toLocaleString(\"en-US\", {\n  timeZone: \"America/Toronto\",\n  hour: \"numeric\",\n  hour12: false\n});\nconst currentHour = parseInt(etHour, 10);\n\n// Define working hours for each agent\nconst workingHours = {\n  \"Lidia\": currentHour >= 4 && currentHour < 20,   // 4am-8pm ET\n  \"Chruthy\": true,  // Toronto-based, no restrictions\n  \"Braden\": true,   // Toronto-based, no restrictions\n  \"Andres\": true    // Toronto-based, no restrictions\n};\n\n// Build agent objects - exclude Jordan for now\nconst agents = names\n  .filter(name => name !== \"Jordan\")  // Temporarily exclude Jordan\n  .map((name, index) => ({\n    name,\n    available: available[names.indexOf(name)], // Get availability from original names index\n    openTickets: openCounts[name] ?? 0,\n    inWorkingHours: workingHours[name] ?? true\n  }));\n\n// Filter for eligible agents (available AND within working hours)\nconst eligible = agents.filter(agent => agent.available && agent.inWorkingHours);\n\n// Assign logic\nlet assignee = \"NO_ONE_AVAILABLE\";\nlet tied = [];\nlet reason = \"\";\n\nif (eligible.length > 0) {\n  const minOpen = Math.min(...eligible.map(a => a.openTickets));\n  tied = eligible.filter(a => a.openTickets === minOpen);\n\n  if (tied.length === 1) {\n    assignee = tied[0].name;\n    reason = `Assigned to ${assignee} with lowest load (${minOpen} open tickets)`;\n  } else {\n    const randomIndex = Math.floor(Math.random() * tied.length);\n    assignee = tied[randomIndex].name;\n    reason = `Randomly assigned among ${tied.length} agents tied at ${minOpen} open tickets: ${tied.map(a => a.name).join(\", \")}`;\n  }\n} else {\n  reason = \"No agents available\";\n}\n\nreturn {\n  assignee,\n  eligibleAgents: eligible.map(a => `${a.name}: ${a.openTickets} open`),\n  tiedAtMin: tied.map(a => a.name),\n  reason,\n  currentHour: `${currentHour}:00 ET`\n};"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1750371736507","giveKey":"count","stepTitle":"Find Open Tickets Lidia","stepNumber":3,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736512","giveKey":"count","stepTitle":"Find Open Tickets Chruthy","stepNumber":4,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736524","giveKey":"count","stepTitle":"Find Open Tickets Braden","stepNumber":6,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736518","giveKey":"count","stepTitle":"Find Open Tickets Andres","stepNumber":5,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750342677207","giveKey":"results[]old__data__f1","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750342677207","giveKey":"results[]old__data__f3","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1750371736538"},"parammap":{},"stepTitle":"Load-Based Assignment"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":16,"root_id":1,"action":"01929fad-d3dd-62c2-52ed-7868d5fcc691","selected_api":"CodeCLIAPI@1.0.1","title":"Load-Based Assignment","authentication_id":null},"33":{"id":33,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":"False","_zap_search_multiple_results":"first","query":"{{32__assignee}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1749047354640","giveKey":"assignee","stepTitle":"Round Robin","stepNumber":17,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749047354678"},"parammap":{},"stepTitle":"Find Agent in Zendesk"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":32,"root_id":1,"action":"agent","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Find Agent in Zendesk","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"34":{"id":34,"paused":true,"type_of":"write","params":{"comment_public":false,"ticket":"{{1__ticket_id}}","group_id":"19022068034845","subject":"","comment":"","assignee_id":"{{33__id}}","priority":"high"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.22","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749047354569"},"parammap":{"group_id":"Tax Exemption"},"stepTitle":"Assign to Tax Exemption "},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":33,"root_id":1,"action":"update_ticket_v2","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Assign to Purchase Orders ","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"35":{"id":35,"paused":true,"type_of":"write","params":{"spreadsheet":"1WqHi-_kLMQxv-R2ykH1abQznm7S2xO5jHmTVdD18uwo","worksheet":"0","COL$A":"{{1__created_at}}","COL$B":"=HYPERLINK(\"{{1__ticket_link}}\", \"{{1__ticket_id}}\") ","COL$C":"{{32__assignee}}","COL$D":"Tax Exemption","COL$E":"{{3__Assignment Reasoning}}","COL$F":"{{32__reason}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"created_at","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_link","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"assignee","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true},{"stepId":"301819547","giveKey":"Assignment Reasoning","stepTitle":"Analyze and Return Data","stepNumber":2,"app":"AICLIAPI@3.1.12","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"reason","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1750371736628"},"parammap":{"spreadsheet":"AR Triager: Ticket Assignment","worksheet":"Sheet1"},"stepTitle":"Log info"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":34,"root_id":1,"action":"add_row_top","selected_api":"GoogleSheetsV2CLIAPI@2.5.4","title":"Log info","authentication_id":"c63e3b38022ba546610b0146744a1870753d0668f7e661fe93b1712a517193b1"},"36":{"id":36,"paused":true,"type_of":"write","params":{"comment_public":false,"ticket":"{{1__ticket_id}}","group_id":"19022039666845","subject":"","comment":"**Summary**: {{3__Ticket Summary}}","assignee_id":"17903085107357","priority":"low"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.22","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749047354566"},"parammap":{"group_id":"Remittance","assignee_id":"Braden Massey admin"},"stepTitle":"Assign to Braden in Remittance"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":15,"root_id":1,"action":"update_ticket_v2","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Assign to Purchase Orders ","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"37":{"id":37,"paused":true,"type_of":"write","params":{"spreadsheet":"1WqHi-_kLMQxv-R2ykH1abQznm7S2xO5jHmTVdD18uwo","worksheet":"0","COL$A":"{{1__created_at}}","COL$B":"=HYPERLINK(\"{{1__ticket_link}}\", \"{{1__ticket_id}}\") ","COL$C":"Braden","COL$D":"Remittance","COL$E":"{{3__Assignment Reasoning}}","COL$F":"Remittance should always be assigned to Braden"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"created_at","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_link","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"assignee","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true},{"stepId":"301819547","giveKey":"Assignment Reasoning","stepTitle":"Analyze and Return Data","stepNumber":2,"app":"AICLIAPI@3.1.12","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"reason","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1750371736626"},"parammap":{"spreadsheet":"AR Triager: Ticket Assignment","worksheet":"Sheet1"},"stepTitle":"Log info"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":36,"root_id":1,"action":"add_row_top","selected_api":"GoogleSheetsV2CLIAPI@2.5.4","title":"Log info","authentication_id":"c63e3b38022ba546610b0146744a1870753d0668f7e661fe93b1712a517193b1"},"38":{"id":38,"paused":true,"type_of":"write","params":{"input":{"lidia_open":"{{4__count}}","chruthy_open":"{{5__count}}","braden_open":"{{7__count}}","andres_open":"{{6__count}}","names":"{{9__results[]old__data__f1}}","available":"{{9__results[]old__data__f3}}","jordan_open":"{{8__count}}"},"code":"// Parse inputs\nconst names = inputData.names.split(\",\").map(n => n.trim());\nconst available = inputData.available.split(\",\").map(a => a.trim().toLowerCase() === \"true\");\n\n// Map agent open ticket counts from individually named inputs\nconst openCounts = {\n  \"Lidia\": parseInt(inputData.lidia_open, 10) || 0,\n  \"Chruthy\": parseInt(inputData.chruthy_open, 10) || 0,\n  \"Braden\": parseInt(inputData.braden_open, 10) || 0,\n  \"Andres\": parseInt(inputData.andres_open, 10) || 0\n};\n\n// Get current hour in ET\nconst now = new Date();\nconst etHour = now.toLocaleString(\"en-US\", {\n  timeZone: \"America/Toronto\",\n  hour: \"numeric\",\n  hour12: false\n});\nconst currentHour = parseInt(etHour, 10);\n\n// Define working hours for each agent\nconst workingHours = {\n  \"Lidia\": currentHour >= 4 && currentHour < 20,   // 4am-8pm ET\n  \"Chruthy\": true,  // Toronto-based, no restrictions\n  \"Braden\": true,   // Toronto-based, no restrictions\n  \"Andres\": true    // Toronto-based, no restrictions\n};\n\n// Build agent objects - exclude Jordan for now\nconst agents = names\n  .filter(name => name !== \"Jordan\")  // Temporarily exclude Jordan\n  .map((name, index) => ({\n    name,\n    available: available[names.indexOf(name)], // Get availability from original names index\n    openTickets: openCounts[name] ?? 0,\n    inWorkingHours: workingHours[name] ?? true\n  }));\n\n// Filter for eligible agents (available AND within working hours)\nconst eligible = agents.filter(agent => agent.available && agent.inWorkingHours);\n\n// Assign logic\nlet assignee = \"NO_ONE_AVAILABLE\";\nlet tied = [];\nlet reason = \"\";\n\nif (eligible.length > 0) {\n  const minOpen = Math.min(...eligible.map(a => a.openTickets));\n  tied = eligible.filter(a => a.openTickets === minOpen);\n\n  if (tied.length === 1) {\n    assignee = tied[0].name;\n    reason = `Assigned to ${assignee} with lowest load (${minOpen} open tickets)`;\n  } else {\n    const randomIndex = Math.floor(Math.random() * tied.length);\n    assignee = tied[randomIndex].name;\n    reason = `Randomly assigned among ${tied.length} agents tied at ${minOpen} open tickets: ${tied.map(a => a.name).join(\", \")}`;\n  }\n} else {\n  reason = \"No agents available\";\n}\n\nreturn {\n  assignee,\n  eligibleAgents: eligible.map(a => `${a.name}: ${a.openTickets} open`),\n  tiedAtMin: tied.map(a => a.name),\n  reason,\n  currentHour: `${currentHour}:00 ET`\n};"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1750387221629","giveKey":"count","stepTitle":"Find Open Tickets Lidia","stepNumber":3,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221614","giveKey":"count","stepTitle":"Find Open Tickets Chruthy","stepNumber":4,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221624","giveKey":"count","stepTitle":"Find Open Tickets Braden","stepNumber":6,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221619","giveKey":"count","stepTitle":"Find Open Tickets Andres","stepNumber":5,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"304978955","giveKey":"results[]old__data__f1","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true},{"stepId":"304978955","giveKey":"results[]old__data__f3","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true}],"replaced_step_id":"304978962"},"parammap":{},"stepTitle":"Load-Based Assignment"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":14,"root_id":1,"action":"01929fad-d3dd-62c2-52ed-7868d5fcc691","selected_api":"CodeCLIAPI@1.0.1","title":"Load-Based Assignment","authentication_id":null},"39":{"id":39,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":"False","_zap_search_multiple_results":"first","query":"{{38__assignee}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1749047354638","giveKey":"assignee","stepTitle":"Round Robin","stepNumber":13,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749047354671"},"parammap":{},"stepTitle":"Find Agent in Zendesk"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":38,"root_id":1,"action":"agent","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Find Agent in Zendesk","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"40":{"id":40,"paused":true,"type_of":"write","params":{"comment_public":false,"ticket":"{{1__ticket_id}}","group_id":"19022041295517","subject":"","comment":"","assignee_id":"{{39__id}}","priority":"normal"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.22","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749047354563"},"parammap":{"group_id":"Wire Refunds"},"stepTitle":"Assign to Wire Refunds "},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":39,"root_id":1,"action":"update_ticket_v2","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Assign to Purchase Orders ","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"41":{"id":41,"paused":true,"type_of":"write","params":{"spreadsheet":"1WqHi-_kLMQxv-R2ykH1abQznm7S2xO5jHmTVdD18uwo","worksheet":"0","COL$A":"{{1__created_at}}","COL$B":"=HYPERLINK(\"{{1__ticket_link}}\", \"{{1__ticket_id}}\") ","COL$C":"{{38__assignee}}","COL$D":"Wire Refunds","COL$E":"{{3__Assignment Reasoning}}","COL$F":"{{38__reason}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"created_at","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_link","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"assignee","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true},{"stepId":"301819547","giveKey":"Assignment Reasoning","stepTitle":"Analyze and Return Data","stepNumber":2,"app":"AICLIAPI@3.1.12","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"reason","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1750371736623"},"parammap":{"spreadsheet":"AR Triager: Ticket Assignment","worksheet":"Sheet1"},"stepTitle":"Log info"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":40,"root_id":1,"action":"add_row_top","selected_api":"GoogleSheetsV2CLIAPI@2.5.4","title":"Log info","authentication_id":"c63e3b38022ba546610b0146744a1870753d0668f7e661fe93b1712a517193b1"},"42":{"id":42,"paused":true,"type_of":"write","params":{},"meta":{"$editor":{"has_automatic_issues":false}},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":13,"root_id":1,"action":"branch","selected_api":"BranchingAPI","title":null,"authentication_id":null},"43":{"id":43,"paused":true,"type_of":"filter","params":{"color":"Yellow Green","emoji":"M","path_eval_index":0,"filter_criteria":[{"id":933806874458016,"group":3521911291381539,"key":"3__Group Name","value":"Net Suite","match":"icontains","action":"continue"}]},"meta":{"$editor":{"has_automatic_issues":false},"stepTitle":"Net Suite"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":42,"root_id":1,"action":"filter","selected_api":"BranchingAPI","title":"Net Suite","authentication_id":null},"44":{"id":44,"paused":true,"type_of":"filter","params":{"color":"Dark Magenta","emoji":"N","path_eval_index":1,"filter_criteria":[{"id":2020327535630230,"group":6186315103071377,"key":"3__Group Name","value":"Stripe","match":"icontains","action":"continue"}]},"meta":{"$editor":{"has_automatic_issues":false},"stepTitle":"Stripe"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":42,"root_id":1,"action":"filter","selected_api":"BranchingAPI","title":"Stripe","authentication_id":null},"45":{"id":45,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":true,"_zap_search_multiple_results":"group","table_id":"01JXGCBREC6CZAQK9K7JMWZBFP","filter_count":"2","field_data_key":"data__f5","operator":"exact","lookup_value":"AR","field_data_key_2":"data__f8","operator_2":"exact","lookup_value_2":"SS"},"meta":{"$editor":{"has_automatic_issues":false,"replaced_step_id":"_GEN_1760463524771"},"parammap":{"table_id":"[Table] Zendesk Agent Availability","field_data_key":"Team","field_data_key_2":"Extra Roles"},"stepTitle":"Find Self-Serve Agents"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":44,"root_id":1,"action":"find_record","selected_api":"TableCLIAPI@1.19.0","title":"Find Self-Serve Agents","authentication_id":null},"46":{"id":46,"paused":true,"type_of":"write","params":{"input":{"lidia_open":"{{4__count}}","chruthy_open":"{{5__count}}","jordan_open":"{{8__count}}","names":"{{45__results[]old__data__f1}}","available":"{{45__results[]old__data__f3}}"},"code":"// Parse inputs\nconst names = inputData.names.split(\",\").map(n => n.trim());\nconst available = inputData.available.split(\",\").map(a => a.trim().toLowerCase() === \"true\");\n\n// Map all agent open ticket counts\nconst openCounts = {\n  \"Lidia\": parseInt(inputData.lidia_open, 10) || 0,\n  \"Chruthy\": parseInt(inputData.chruthy_open, 10) || 0,\n  \"Jordan\": parseInt(inputData.jordan_open, 10) || 0\n};\n\n// Get current hour in ET\nconst now = new Date();\nconst etHour = now.toLocaleString(\"en-US\", {\n  timeZone: \"America/Toronto\",\n  hour: \"numeric\",\n  hour12: false\n});\nconst currentHour = parseInt(etHour, 10);\n\n// Define working hours for each agent based on your specified hours\nconst workingHours = {\n  \"Lidia\": currentHour >= 16 || currentHour < 12,  // 4pm-11:59am ET (16-23, 0-11)\n  \"Chruthy\": currentHour >= 7 && currentHour < 16, // 7am-3:59pm ET (7-15)\n  \"Jordan\": currentHour >= 7 && currentHour < 16   // 7am-3:59pm ET (7-15)\n};\n\n// Build agent objects for only those in the names list\nconst agents = names.map((name, index) => ({\n  name,\n  available: available[index],\n  openTickets: openCounts[name] ?? 0,\n  inWorkingHours: workingHours[name] ?? true\n}));\n\n// Filter for eligible agents (available AND within working hours)\nconst eligible = agents.filter(agent => agent.available && agent.inWorkingHours);\n\n// Assign logic\nlet assignee = \"NO_ONE_AVAILABLE\";\nlet reason = \"\";\n\nif (eligible.length > 0) {\n  // Find minimum ticket count\n  const minOpen = Math.min(...eligible.map(a => a.openTickets));\n  const tied = eligible.filter(a => a.openTickets === minOpen);\n\n  if (tied.length === 1) {\n    assignee = tied[0].name;\n    reason = `Assigned to ${assignee} with lowest load (${minOpen} open tickets)`;\n  } else {\n    // Random selection among tied agents\n    const randomIndex = Math.floor(Math.random() * tied.length);\n    assignee = tied[randomIndex].name;\n    reason = `Randomly assigned among ${tied.length} agents tied at ${minOpen} open tickets: ${tied.map(a => a.name).join(\", \")}`;\n  }\n} else {\n  reason = \"No agents available\";\n  // Add context about why\n  const unavailableReasons = agents.map(a => {\n    if (!a.available) return `${a.name}: marked unavailable`;\n    if (!a.inWorkingHours) return `${a.name}: outside working hours`;\n    return null;\n  }).filter(r => r);\n  \n  if (unavailableReasons.length > 0) {\n    reason += ` (${unavailableReasons.join(\"; \")})`;\n  }\n}\n\nreturn {\n  assignee,\n  reason,\n  currentHour: `${currentHour}:00 ET`,\n  eligibleAgents: eligible.map(a => a.name).join(\", \") || \"none\"\n};"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"304990854","giveKey":"count","stepTitle":"Find Open Tickets Lidia","stepNumber":4,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"304990855","giveKey":"count","stepTitle":"Find Open Tickets Chruthy","stepNumber":5,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"_GEN_1760463524714","giveKey":"count","stepTitle":"Find Open Tickets Jordan","stepNumber":8,"app":"WebHookCLIAPI@1.0.37","hadMappingAtCopyTime":true},{"stepId":"_GEN_1760463524730","giveKey":"results[]old__data__f1","stepTitle":"Find Self-Serve Agents","stepNumber":20,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true},{"stepId":"_GEN_1760463524730","giveKey":"results[]old__data__f3","stepTitle":"Find Self-Serve Agents","stepNumber":20,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1760463524737"},"parammap":{},"stepTitle":"Round-Robin (Availability, Timezone, Load)"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":45,"root_id":1,"action":"01929fad-d3dd-62c2-52ed-7868d5fcc691","selected_api":"CodeCLIAPI@1.0.1","title":"Round-Robin (Availability, Timezone, Load)","authentication_id":null},"47":{"id":47,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":"False","_zap_search_multiple_results":"first","query":"{{46__assignee}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1760463524739","giveKey":"assignee","stepTitle":"Round-Robin (Availability, Timezone, Load)","stepNumber":21,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1760463524725"},"parammap":{},"stepTitle":"Find Agent in Zendesk"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":46,"root_id":1,"action":"agent","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Find Agent in Zendesk","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"48":{"id":48,"paused":true,"type_of":"write","params":{"comment_public":false,"ticket":"{{1__ticket_id}}","group_id":"19022005505053","subject":"","comment":"","tags":"","additional_tags":"","remove_tags":"","assignee_id":"{{47__id}}","external_id":"","email_ccs":"","custom_fields__lead_status_20074112441885":"","custom_fields__slack-message-timestamp_21244321687325":"","custom_fields__pre_compliance_seat_count_24929870216477":"","custom_fields__salesforce_account_id_26360924475933":"","custom_fields__requester_email_26361497795357":"","custom_fields__ticket_id_26361514386333":"","custom_fields__ticket_url_26361607322397":"","custom_fields__retool_user_(url)_26363648790429":"","custom_fields__canvas_beta_user?_26448336250269":"","custom_fields__csm-billing_test_field_18919530465949":"","custom_fields__talk_time_23256281735453":"","custom_fields__aircall_call_id_23256297667869":"","custom_fields__post_compliance_seat_count_24679273598877":"","custom_fields__total_time_spent_(sec)_25284276108957":"","custom_fields__pricingexperiment_23543622261533":"","custom_fields__duration_23256300863517":"","custom_fields__waiting_time_23256300863773":"","custom_fields__aircall_sms_id_23256300866589":"","custom_fields__time_spent_last_update_(sec)_25284276109469":"","priority":"urgent","comment_format":"plaintext_md"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier (1.0.29)","stepNumber":1,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"_GEN_1760463524753","giveKey":"id","stepTitle":"Find Agent in Zendesk","stepNumber":22,"app":"ZendeskV2CLIAPI@1.18.0","hadMappingAtCopyTime":true}]},"parammap":{"group_id":"Purchase Orders"},"stepTitle":"Assign to Purchase Orders and Agent"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":47,"root_id":1,"action":"update_ticket_v2","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Assign to Purchase Orders and Agent","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"49":{"id":49,"paused":true,"type_of":"write","params":{"spreadsheet":"1WqHi-_kLMQxv-R2ykH1abQznm7S2xO5jHmTVdD18uwo","worksheet":"0","COL$A":"{{1__created_at}}","COL$B":"=HYPERLINK(\"{{1__ticket_link}}\", \"{{1__ticket_id}}\") ","COL$C":"{{46__assignee}}","COL$D":"Purchase Orders","COL$E":"{{3__Reasoning}}","COL$F":"{{46__reason}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"created_at","stepTitle":"Catch Hook in Webhooks by Zapier (1.0.29)","stepNumber":1,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_link","stepTitle":"Catch Hook in Webhooks by Zapier (1.0.29)","stepNumber":1,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier (1.0.29)","stepNumber":1,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"_GEN_1760463524739","giveKey":"assignee","stepTitle":"Round-Robin (Availability, Timezone, Load)","stepNumber":21,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true},{"stepId":"301819547","giveKey":"Reasoning","stepTitle":"Analyze and Return Data","stepNumber":3,"app":"AICLIAPI@3.3.2","hadMappingAtCopyTime":true},{"stepId":"_GEN_1760463524739","giveKey":"reason","stepTitle":"Round-Robin (Availability, Timezone, Load)","stepNumber":21,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}]},"parammap":{"spreadsheet":"AR Triager: Ticket Assignment","worksheet":"Sheet1"},"stepTitle":"Log info"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":48,"root_id":1,"action":"add_row_top","selected_api":"GoogleSheetsV2CLIAPI@2.5.4","title":"Log info","authentication_id":"c63e3b38022ba546610b0146744a1870753d0668f7e661fe93b1712a517193b1"},"50":{"id":50,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":true,"_zap_search_multiple_results":"group","table_id":"01JXGCBREC6CZAQK9K7JMWZBFP","filter_count":"2","field_data_key":"data__f5","operator":"exact","lookup_value":"AR","field_data_key_2":"data__f8","operator_2":"exact","lookup_value_2":"FS"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{"table_id":"[Table] Zendesk Agent Availability","field_data_key":"Team","field_data_key_2":"Extra Roles"},"stepTitle":"Find Full-Serve Agents"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":43,"root_id":1,"action":"find_record","selected_api":"TableCLIAPI@1.19.0","title":"Find Full-Serve Agents","authentication_id":null},"51":{"id":51,"paused":true,"type_of":"write","params":{"input":{"andres_open":"{{6__count}}","braden_open":"{{7__count}}","names":"{{50__results[]old__data__f1}}","available":"{{50__results[]old__data__f3}}"},"code":"// Parse inputs\nconst names = inputData.names.split(\",\").map(n => n.trim());\nconst available = inputData.available.split(\",\").map(a => a.trim().toLowerCase() === \"true\");\n\n// Map all agent open ticket counts\nconst openCounts = {\n  \"Andres\": parseInt(inputData.andres_open, 10) || 0,\n  \"Braden\": parseInt(inputData.braden_open, 10) || 0\n};\n\n// Build agent objects for only those in the names list\nconst agents = names.map((name, index) => ({\n  name,\n  available: available[index],\n  openTickets: openCounts[name] ?? 0\n}));\n\n// Filter for eligible agents (just availability check, no timezone)\nconst eligible = agents.filter(agent => agent.available);\n\n// Assign logic\nlet assignee = \"NO_ONE_AVAILABLE\";\nlet reason = \"\";\n\nif (eligible.length > 0) {\n  // Find minimum ticket count\n  const minOpen = Math.min(...eligible.map(a => a.openTickets));\n  const tied = eligible.filter(a => a.openTickets === minOpen);\n\n  if (tied.length === 1) {\n    assignee = tied[0].name;\n    reason = `Assigned to ${assignee} with lowest load (${minOpen} open tickets)`;\n  } else {\n    // Random selection among tied agents\n    const randomIndex = Math.floor(Math.random() * tied.length);\n    assignee = tied[randomIndex].name;\n    reason = `Randomly assigned among ${tied.length} agents tied at ${minOpen} open tickets: ${tied.map(a => a.name).join(\", \")}`;\n  }\n} else {\n  reason = \"No agents available\";\n  // Add context about why\n  const unavailableReasons = agents.map(a => {\n    if (!a.available) return `${a.name}: marked unavailable`;\n    return null;\n  }).filter(r => r);\n  \n  if (unavailableReasons.length > 0) {\n    reason += ` (${unavailableReasons.join(\"; \")})`;\n  }\n}\n\nreturn {\n  assignee,\n  reason,\n  eligibleAgents: eligible.map(a => a.name).join(\", \") || \"none\"\n};"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"304990856","giveKey":"count","stepTitle":"Find Open Tickets Andres","stepNumber":6,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"304990857","giveKey":"count","stepTitle":"Find Open Tickets Braden","stepNumber":7,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"_GEN_1760463524744","giveKey":"results[]old__data__f1","stepTitle":"Find Full-Serve Agents","stepNumber":14,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true},{"stepId":"_GEN_1760463524744","giveKey":"results[]old__data__f3","stepTitle":"Find Full-Serve Agents","stepNumber":14,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true}],"replaced_step_id":"304990859"},"parammap":{},"stepTitle":"Round-Robin (Availability, Timezone, Load)"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":50,"root_id":1,"action":"01929fad-d3dd-62c2-52ed-7868d5fcc691","selected_api":"CodeCLIAPI@1.0.1","title":"Round-Robin (Availability, Timezone, Load)","authentication_id":null},"52":{"id":52,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":"False","_zap_search_multiple_results":"first","query":"{{51__assignee}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1749047354626","giveKey":"assignee","stepTitle":"Round Robin","stepNumber":9,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749047354656"},"parammap":{},"stepTitle":"Find Agent in Zendesk"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":51,"root_id":1,"action":"agent","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Find Agent in Zendesk","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"53":{"id":53,"paused":true,"type_of":"write","params":{"comment_public":false,"ticket":"{{1__ticket_id}}","group_id":"19022025775901","subject":"","comment":"","tags":"","additional_tags":"","remove_tags":"","assignee_id":"{{52__id}}","priority":"normal"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.22","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749047354557"},"parammap":{"group_id":"Dunning"},"stepTitle":"Assign to Dunning "},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":52,"root_id":1,"action":"update_ticket_v2","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Assign to Purchase Orders ","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"54":{"id":54,"paused":true,"type_of":"write","params":{"spreadsheet":"1WqHi-_kLMQxv-R2ykH1abQznm7S2xO5jHmTVdD18uwo","worksheet":"0","COL$A":"{{1__created_at}}","COL$B":"=HYPERLINK(\"{{1__ticket_link}}\", \"{{1__ticket_id}}\") ","COL$C":"{{51__assignee}}","COL$D":"Dunning","COL$E":"{{3__Reasoning}}","COL$F":"{{51__reason}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"created_at","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_link","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"assignee","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true},{"stepId":"301819547","giveKey":"Assignment Reasoning","stepTitle":"Analyze and Return Data","stepNumber":2,"app":"AICLIAPI@3.1.12","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736532","giveKey":"reason","stepTitle":"Load-Based Assignment","stepNumber":16,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1750371736621"},"parammap":{"spreadsheet":"AR Triager: Ticket Assignment","worksheet":"Sheet1"},"stepTitle":"Log info"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":53,"root_id":1,"action":"add_row_top","selected_api":"GoogleSheetsV2CLIAPI@2.5.4","title":"Log info","authentication_id":"c63e3b38022ba546610b0146744a1870753d0668f7e661fe93b1712a517193b1"},"55":{"id":55,"paused":true,"type_of":"write","params":{"input":{"lidia_open":"{{4__count}}","chruthy_open":"{{5__count}}","braden_open":"{{7__count}}","andres_open":"{{6__count}}","names":"{{9__results[]old__data__f1}}","available":"{{9__results[]old__data__f3}}","jordan_open":"{{8__count}}"},"code":"// Parse inputs\nconst names = inputData.names.split(\",\").map(n => n.trim());\nconst available = inputData.available.split(\",\").map(a => a.trim().toLowerCase() === \"true\");\n\n// Map agent open ticket counts from individually named inputs\nconst openCounts = {\n  \"Lidia\": parseInt(inputData.lidia_open, 10) || 0,\n  \"Chruthy\": parseInt(inputData.chruthy_open, 10) || 0,\n  \"Braden\": parseInt(inputData.braden_open, 10) || 0,\n  \"Andres\": parseInt(inputData.andres_open, 10) || 0\n};\n\n// Get current hour in ET\nconst now = new Date();\nconst etHour = now.toLocaleString(\"en-US\", {\n  timeZone: \"America/Toronto\",\n  hour: \"numeric\",\n  hour12: false\n});\nconst currentHour = parseInt(etHour, 10);\n\n// Define working hours for each agent\nconst workingHours = {\n  \"Lidia\": currentHour >= 4 && currentHour < 20,   // 4am-8pm ET\n  \"Chruthy\": true,  // Toronto-based, no restrictions\n  \"Braden\": true,   // Toronto-based, no restrictions\n  \"Andres\": true    // Toronto-based, no restrictions\n};\n\n// Build agent objects - exclude Jordan for now\nconst agents = names\n  .filter(name => name !== \"Jordan\")  // Temporarily exclude Jordan\n  .map((name, index) => ({\n    name,\n    available: available[names.indexOf(name)], // Get availability from original names index\n    openTickets: openCounts[name] ?? 0,\n    inWorkingHours: workingHours[name] ?? true\n  }));\n\n// Filter for eligible agents (available AND within working hours)\nconst eligible = agents.filter(agent => agent.available && agent.inWorkingHours);\n\n// Assign logic\nlet assignee = \"NO_ONE_AVAILABLE\";\nlet tied = [];\nlet reason = \"\";\n\nif (eligible.length > 0) {\n  const minOpen = Math.min(...eligible.map(a => a.openTickets));\n  tied = eligible.filter(a => a.openTickets === minOpen);\n\n  if (tied.length === 1) {\n    assignee = tied[0].name;\n    reason = `Assigned to ${assignee} with lowest load (${minOpen} open tickets)`;\n  } else {\n    const randomIndex = Math.floor(Math.random() * tied.length);\n    assignee = tied[randomIndex].name;\n    reason = `Randomly assigned among ${tied.length} agents tied at ${minOpen} open tickets: ${tied.map(a => a.name).join(\", \")}`;\n  }\n} else {\n  reason = \"No agents available\";\n}\n\nreturn {\n  assignee,\n  eligibleAgents: eligible.map(a => `${a.name}: ${a.openTickets} open`),\n  tiedAtMin: tied.map(a => a.name),\n  reason,\n  currentHour: `${currentHour}:00 ET`\n};"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1750387221629","giveKey":"count","stepTitle":"Find Open Tickets Lidia","stepNumber":3,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221614","giveKey":"count","stepTitle":"Find Open Tickets Chruthy","stepNumber":4,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221624","giveKey":"count","stepTitle":"Find Open Tickets Braden","stepNumber":6,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750387221619","giveKey":"count","stepTitle":"Find Open Tickets Andres","stepNumber":5,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"304978955","giveKey":"results[]old__data__f1","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true},{"stepId":"304978955","giveKey":"results[]old__data__f3","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true}],"replaced_step_id":"304978958"},"parammap":{},"stepTitle":"Load-Based Assignment"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":12,"root_id":1,"action":"01929fad-d3dd-62c2-52ed-7868d5fcc691","selected_api":"CodeCLIAPI@1.0.1","title":"Load-Based Assignment","authentication_id":null},"56":{"id":56,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":"False","_zap_search_multiple_results":"first","query":"{{55__assignee}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1749047354622","giveKey":"assignee","stepTitle":"Round Robin","stepNumber":5,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749047354655"},"parammap":{},"stepTitle":"Find Agent in Zendesk"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":55,"root_id":1,"action":"agent","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Find Agent in Zendesk","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"57":{"id":57,"paused":true,"type_of":"write","params":{"comment_public":false,"ticket":"{{1__ticket_id}}","group_id":"19022050651677","subject":"","comment":"","tags":"","additional_tags":"","remove_tags":"","assignee_id":"{{56__id}}","priority":"urgent"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.22","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1749047354554"},"parammap":{"group_id":"Credit Card Requests"},"stepTitle":"Assign to Credit Card Requests "},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":56,"root_id":1,"action":"update_ticket_v2","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Assign to Purchase Orders ","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"58":{"id":58,"paused":true,"type_of":"write","params":{"spreadsheet":"1WqHi-_kLMQxv-R2ykH1abQznm7S2xO5jHmTVdD18uwo","worksheet":"0","COL$A":"{{1__created_at}}","COL$B":"=HYPERLINK(\"{{1__ticket_link}}\", \"{{1__ticket_id}}\") ","COL$C":"{{55__assignee}}","COL$D":"Credit Card Requests","COL$E":"{{3__Assignment Reasoning}}","COL$F":"{{55__reason}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"created_at","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_link","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier","stepNumber":1,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736610","giveKey":"assignee","stepTitle":"Load-Based Assignment","stepNumber":11,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736610","giveKey":"reason","stepTitle":"Load-Based Assignment","stepNumber":11,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1750371736618"},"parammap":{"spreadsheet":"AR Triager: Ticket Assignment","worksheet":"Sheet1"},"stepTitle":"Log info"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":57,"root_id":1,"action":"add_row_top","selected_api":"GoogleSheetsV2CLIAPI@2.5.4","title":"Log info","authentication_id":"c63e3b38022ba546610b0146744a1870753d0668f7e661fe93b1712a517193b1"},"59":{"id":59,"paused":true,"type_of":"write","params":{},"meta":{"$editor":{"has_automatic_issues":false}},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":11,"root_id":1,"action":"branch","selected_api":"BranchingAPI","title":null,"authentication_id":null},"60":{"id":60,"paused":true,"type_of":"filter","params":{"color":"Heroine Blue","emoji":"K","filter_criteria":[{"id":4718683114944584,"group":3088920677697897,"key":"3__Group Name","value":"Full-serve","match":"icontains","action":"continue"}],"path_eval_index":0},"meta":{"$editor":{"has_automatic_issues":false},"stepTitle":"Full Serve"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":59,"root_id":1,"action":"filter","selected_api":"BranchingAPI","title":"Full Serve","authentication_id":null},"61":{"id":61,"paused":true,"type_of":"filter","params":{"color":"Peru","emoji":"L","path_eval_index":1,"filter_criteria":[{"id":4541940208054445,"group":4756022974720310,"key":"3__Group Name","value":"Self-Serve","match":"icontains","action":"continue"}]},"meta":{"$editor":{"has_automatic_issues":false},"stepTitle":"Self Serve"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":59,"root_id":1,"action":"filter","selected_api":"BranchingAPI","title":"Self Serve","authentication_id":null},"62":{"id":62,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":true,"_zap_search_multiple_results":"group","table_id":"01JXGCBREC6CZAQK9K7JMWZBFP","filter_count":"2","field_data_key":"data__f5","operator":"exact","lookup_value":"AR","field_data_key_2":"data__f8","operator_2":"exact","lookup_value_2":"SS"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{"table_id":"[Table] Zendesk Agent Availability","field_data_key":"Team","field_data_key_2":"Extra Roles"},"stepTitle":"Find Self-Serve Agents"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":61,"root_id":1,"action":"find_record","selected_api":"TableCLIAPI@1.19.0","title":"Find Self-Serve Agents","authentication_id":null},"63":{"id":63,"paused":true,"type_of":"write","params":{"input":{"lidia_open":"{{4__count}}","chruthy_open":"{{5__count}}","jordan_open":"{{8__count}}","names":"{{62__results[]old__data__f1}}","available":"{{62__results[]old__data__f3}}"},"code":"// Parse inputs\nconst names = inputData.names.split(\",\").map(n => n.trim());\nconst available = inputData.available.split(\",\").map(a => a.trim().toLowerCase() === \"true\");\n\n// Map all agent open ticket counts\nconst openCounts = {\n  \"Lidia\": parseInt(inputData.lidia_open, 10) || 0,\n  \"Chruthy\": parseInt(inputData.chruthy_open, 10) || 0,\n  \"Jordan\": parseInt(inputData.jordan_open, 10) || 0\n};\n\n// Get current hour in ET\nconst now = new Date();\nconst etHour = now.toLocaleString(\"en-US\", {\n  timeZone: \"America/Toronto\",\n  hour: \"numeric\",\n  hour12: false\n});\nconst currentHour = parseInt(etHour, 10);\n\n// Define working hours for each agent based on your specified hours\nconst workingHours = {\n  \"Lidia\": currentHour >= 16 || currentHour < 12,  // 4pm-11:59am ET (16-23, 0-11)\n  \"Chruthy\": currentHour >= 7 && currentHour < 16, // 7am-3:59pm ET (7-15)\n  \"Jordan\": currentHour >= 7 && currentHour < 16   // 7am-3:59pm ET (7-15)\n};\n\n// Build agent objects for only those in the names list\nconst agents = names.map((name, index) => ({\n  name,\n  available: available[index],\n  openTickets: openCounts[name] ?? 0,\n  inWorkingHours: workingHours[name] ?? true\n}));\n\n// Filter for eligible agents (available AND within working hours)\nconst eligible = agents.filter(agent => agent.available && agent.inWorkingHours);\n\n// Assign logic\nlet assignee = \"NO_ONE_AVAILABLE\";\nlet reason = \"\";\n\nif (eligible.length > 0) {\n  // Find minimum ticket count\n  const minOpen = Math.min(...eligible.map(a => a.openTickets));\n  const tied = eligible.filter(a => a.openTickets === minOpen);\n\n  if (tied.length === 1) {\n    assignee = tied[0].name;\n    reason = `Assigned to ${assignee} with lowest load (${minOpen} open tickets)`;\n  } else {\n    // Random selection among tied agents\n    const randomIndex = Math.floor(Math.random() * tied.length);\n    assignee = tied[randomIndex].name;\n    reason = `Randomly assigned among ${tied.length} agents tied at ${minOpen} open tickets: ${tied.map(a => a.name).join(\", \")}`;\n  }\n} else {\n  reason = \"No agents available\";\n  // Add context about why\n  const unavailableReasons = agents.map(a => {\n    if (!a.available) return `${a.name}: marked unavailable`;\n    if (!a.inWorkingHours) return `${a.name}: outside working hours`;\n    return null;\n  }).filter(r => r);\n  \n  if (unavailableReasons.length > 0) {\n    reason += ` (${unavailableReasons.join(\"; \")})`;\n  }\n}\n\nreturn {\n  assignee,\n  reason,\n  currentHour: `${currentHour}:00 ET`,\n  eligibleAgents: eligible.map(a => a.name).join(\", \") || \"none\"\n};"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"304990854","giveKey":"count","stepTitle":"Find Open Tickets Lidia","stepNumber":4,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"304990855","giveKey":"count","stepTitle":"Find Open Tickets Chruthy","stepNumber":5,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"_GEN_1760463524714","giveKey":"count","stepTitle":"Find Open Tickets Jordan","stepNumber":8,"app":"WebHookCLIAPI@1.0.37","hadMappingAtCopyTime":true},{"stepId":"304978955","giveKey":"results[]old__data__f1","stepTitle":"Find AR Availability","stepNumber":9,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true},{"stepId":"304978955","giveKey":"results[]old__data__f3","stepTitle":"Find AR Availability","stepNumber":9,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1760463524737"},"parammap":{},"stepTitle":"Round-Robin (Availability, Timezone, Load)"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":62,"root_id":1,"action":"01929fad-d3dd-62c2-52ed-7868d5fcc691","selected_api":"CodeCLIAPI@1.0.1","title":"Round-Robin (Availability, Timezone, Load)","authentication_id":null},"64":{"id":64,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":"False","_zap_search_multiple_results":"first","query":"{{63__assignee}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"304978956","giveKey":"assignee","stepTitle":"Round-Robin (Availability, Timezone, Load)","stepNumber":15,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1760463524725"},"parammap":{},"stepTitle":"Find Agent in Zendesk"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":63,"root_id":1,"action":"agent","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Find Agent in Zendesk","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"65":{"id":65,"paused":true,"type_of":"write","params":{"comment_public":false,"ticket":"{{1__ticket_id}}","group_id":"19022005505053","subject":"","comment":"","tags":"","additional_tags":"","remove_tags":"","assignee_id":"{{64__id}}","external_id":"","email_ccs":"","custom_fields__lead_status_20074112441885":"","custom_fields__slack-message-timestamp_21244321687325":"","custom_fields__pre_compliance_seat_count_24929870216477":"","custom_fields__salesforce_account_id_26360924475933":"","custom_fields__requester_email_26361497795357":"","custom_fields__ticket_id_26361514386333":"","custom_fields__ticket_url_26361607322397":"","custom_fields__retool_user_(url)_26363648790429":"","custom_fields__canvas_beta_user?_26448336250269":"","custom_fields__csm-billing_test_field_18919530465949":"","custom_fields__talk_time_23256281735453":"","custom_fields__aircall_call_id_23256297667869":"","custom_fields__post_compliance_seat_count_24679273598877":"","custom_fields__total_time_spent_(sec)_25284276108957":"","custom_fields__pricingexperiment_23543622261533":"","custom_fields__duration_23256300863517":"","custom_fields__waiting_time_23256300863773":"","custom_fields__aircall_sms_id_23256300866589":"","custom_fields__time_spent_last_update_(sec)_25284276109469":"","priority":"urgent","comment_format":"plaintext_md"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier (1.0.29)","stepNumber":1,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"301849655","giveKey":"id","stepTitle":"Find Agent in Zendesk","stepNumber":16,"app":"ZendeskV2CLIAPI@1.18.0","hadMappingAtCopyTime":true}]},"parammap":{"group_id":"Purchase Orders"},"stepTitle":"Assign to Purchase Orders and Agent"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":64,"root_id":1,"action":"update_ticket_v2","selected_api":"ZendeskV2CLIAPI@1.18.0","title":"Assign to Purchase Orders and Agent","authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"66":{"id":66,"paused":true,"type_of":"write","params":{"spreadsheet":"1WqHi-_kLMQxv-R2ykH1abQznm7S2xO5jHmTVdD18uwo","worksheet":"0","COL$A":"{{1__created_at}}","COL$B":"=HYPERLINK(\"{{1__ticket_link}}\", \"{{1__ticket_id}}\") ","COL$C":"{{63__assignee}}","COL$D":"Purchase Orders","COL$E":"{{3__Reasoning}}","COL$F":"{{63__reason}}"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"301819546","giveKey":"created_at","stepTitle":"Catch Hook in Webhooks by Zapier (1.0.29)","stepNumber":1,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_link","stepTitle":"Catch Hook in Webhooks by Zapier (1.0.29)","stepNumber":1,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"301819546","giveKey":"ticket_id","stepTitle":"Catch Hook in Webhooks by Zapier (1.0.29)","stepNumber":1,"app":"WebHookCLIAPI@1.0.29","hadMappingAtCopyTime":true},{"stepId":"304978956","giveKey":"assignee","stepTitle":"Round-Robin (Availability, Timezone, Load)","stepNumber":15,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true},{"stepId":"301819547","giveKey":"Assignment Reasoning","stepTitle":"Analyze and Return Data","stepNumber":3,"app":"AICLIAPI@3.3.2","hadMappingAtCopyTime":true},{"stepId":"304978956","giveKey":"reason","stepTitle":"Round-Robin (Availability, Timezone, Load)","stepNumber":15,"app":"CodeCLIAPI@1.0.1","hadMappingAtCopyTime":true}]},"parammap":{"spreadsheet":"AR Triager: Ticket Assignment","worksheet":"Sheet1"},"stepTitle":"Log info"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":65,"root_id":1,"action":"add_row_top","selected_api":"GoogleSheetsV2CLIAPI@2.5.4","title":"Log info","authentication_id":"c63e3b38022ba546610b0146744a1870753d0668f7e661fe93b1712a517193b1"},"67":{"id":67,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":true,"_zap_search_multiple_results":"group","table_id":"01JXGCBREC6CZAQK9K7JMWZBFP","filter_count":"2","field_data_key":"data__f5","operator":"exact","lookup_value":"AR","field_data_key_2":"data__f8","operator_2":"exact","lookup_value_2":"FS"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{"table_id":"[Table] Zendesk Agent Availability","field_data_key":"Team","field_data_key_2":"Extra Roles"},"stepTitle":"Find Full-Serve Agents"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":60,"root_id":1,"action":"find_record","selected_api":"TableCLIAPI@1.19.0","title":"Find Full-Serve Agents","authentication_id":null},"68":{"id":68,"paused":true,"type_of":"write","params":{"input":{"andres_open":"{{6__count}}","braden_open":"{{7__count}}","names":"{{67__results[]old__data__f1}}","available":"{{67__results[]old__data__f3}}"},"code":"// Parse inputs\nconst names = inputData.names.split(\",\").map(n => n.trim());\nconst available = inputData.available.split(\",\").map(a => a.trim().toLowerCase() === \"true\");\n\n// Map all agent open ticket counts\nconst openCounts = {\n  \"Andres\": parseInt(inputData.andres_open, 10) || 0,\n  \"Braden\": parseInt(inputData.braden_open, 10) || 0\n};\n\n// Build agent objects for only those in the names list\nconst agents = names.map((name, index) => ({\n  name,\n  available: available[index],\n  openTickets: openCounts[name] ?? 0\n}));\n\n// Filter for eligible agents (just availability check, no timezone)\nconst eligible = agents.filter(agent => agent.available);\n\n// Assign logic\nlet assignee = \"NO_ONE_AVAILABLE\";\nlet reason = \"\";\n\nif (eligible.length > 0) {\n  // Find minimum ticket count\n  const minOpen = Math.min(...eligible.map(a => a.openTickets));\n  const tied = eligible.filter(a => a.openTickets === minOpen);\n\n  if (tied.length === 1) {\n    assignee = tied[0].name;\n    reason = `Assigned to ${assignee} with lowest load (${minOpen} open tickets)`;\n  } else {\n    // Random selection among tied agents\n    const randomIndex = Math.floor(Math.random() * tied.length);\n    assignee = tied[randomIndex].name;\n    reason = `Randomly assigned among ${tied.length} agents tied at ${minOpen} open tickets: ${tied.map(a => a.name).join(\", \")}`;\n  }\n} else {\n  reason = \"No agents available\";\n  // Add context about why\n  const unavailableReasons = agents.map(a => {\n    if (!a.available) return `${a.name}: marked unavailable`;\n    return null;\n  }).filter(r => r);\n  \n  if (unavailableReasons.length > 0) {\n    reason += ` (${unavailableReasons.join(\"; \")})`;\n  }\n}\n\nreturn {\n  assignee,\n  reason,\n  eligibleAgents: eligible.map(a => a.name).join(\", \") || \"none\"\n};"},"meta":{"$editor":{"has_automatic_issues":false,"missing_field_mapping":[{"stepId":"_GEN_1750371736507","giveKey":"count","stepTitle":"Find Open Tickets Lidia","stepNumber":3,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736512","giveKey":"count","stepTitle":"Find Open Tickets Chruthy","stepNumber":4,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736524","giveKey":"count","stepTitle":"Find Open Tickets Braden","stepNumber":6,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750371736518","giveKey":"count","stepTitle":"Find Open Tickets Andres","stepNumber":5,"app":"WebHookCLIAPI@1.0.26","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750342677207","giveKey":"results[]old__data__f1","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true},{"stepId":"_GEN_1750342677207","giveKey":"results[]old__data__f3","stepTitle":"Find AR Availability","stepNumber":7,"app":"TableCLIAPI@1.19.0","hadMappingAtCopyTime":true}],"replaced_step_id":"_GEN_1750371736583"},"parammap":{},"stepTitle":"Round-Robin (Availability, Timezone, Load)"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":67,"root_id":1,"action":"01929fad-d3dd-62c2-52ed-7868d5fcc691","selected_api":"CodeCLIAPI@1.0.1","title":"Load-Based Assignment","authentication_id":null},"69":{"id":69,"paused":true,"type_of":"search","params":{"_zap_search_success_on_miss":"False","_zap_search_multiple_results":"first","query":"{{68__assignee}}"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{},"stepTitle":"Find Agent in Zendesk"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":68,"root_id":1,"action":"agent","selected_api":"ZendeskV2CLIAPI@1.18.0","title":null,"authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"70":{"id":70,"paused":true,"type_of":"write","params":{"comment_public":false,"ticket":"{{1__ticket_id}}","group_id":"19022005505053","subject":"","comment":"","tags":"","additional_tags":"","remove_tags":"","assignee_id":"{{69__id}}","external_id":"","email_ccs":"","custom_fields__lead_status_20074112441885":"","custom_fields__slack-message-timestamp_21244321687325":"","custom_fields__pre_compliance_seat_count_24929870216477":"","custom_fields__salesforce_account_id_26360924475933":"","custom_fields__requester_email_26361497795357":"","custom_fields__ticket_id_26361514386333":"","custom_fields__ticket_url_26361607322397":"","custom_fields__retool_user_(url)_26363648790429":"","custom_fields__canvas_beta_user?_26448336250269":"","custom_fields__csm-billing_test_field_18919530465949":"","custom_fields__talk_time_23256281735453":"","custom_fields__aircall_call_id_23256297667869":"","custom_fields__post_compliance_seat_count_24679273598877":"","custom_fields__total_time_spent_(sec)_25284276108957":"","custom_fields__pricingexperiment_23543622261533":"","custom_fields__duration_23256300863517":"","custom_fields__waiting_time_23256300863773":"","custom_fields__aircall_sms_id_23256300866589":"","custom_fields__time_spent_last_update_(sec)_25284276109469":"","priority":"urgent","comment_format":"plaintext_md"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{"group_id":"Purchase Orders"},"stepTitle":"Assign to Purchase Orders and Agent"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":69,"root_id":1,"action":"update_ticket_v2","selected_api":"ZendeskV2CLIAPI@1.18.0","title":null,"authentication_id":"114fe1c4eb278dfea272a6bc794c377cbe2644cf22cb8cf2b798178b13f60bcb"},"71":{"id":71,"paused":true,"type_of":"write","params":{"spreadsheet":"1WqHi-_kLMQxv-R2ykH1abQznm7S2xO5jHmTVdD18uwo","worksheet":"0","COL$A":"{{1__created_at}}","COL$B":"=HYPERLINK(\"{{1__ticket_link}}\", \"{{1__ticket_id}}\") ","COL$C":"{{68__assignee}}","COL$D":"Purchase Orders","COL$E":"{{3__Assignment Reasoning}}","COL$F":"{{68__reason}}"},"meta":{"$editor":{"has_automatic_issues":false},"parammap":{"spreadsheet":"AR Triager: Ticket Assignment","worksheet":"Sheet1"},"stepTitle":"Log info"},"triple_stores":{"copied_from":null,"created_by":null,"polling_interval_override":0,"block_and_release_limit_override":0,"spread_tasks":1},"parent_id":70,"root_id":1,"action":"add_row_top","selected_api":"GoogleSheetsV2CLIAPI@2.5.4","title":"Log info","authentication_id":"c63e3b38022ba546610b0146744a1870753d0668f7e661fe93b1712a517193b1"}}}]}